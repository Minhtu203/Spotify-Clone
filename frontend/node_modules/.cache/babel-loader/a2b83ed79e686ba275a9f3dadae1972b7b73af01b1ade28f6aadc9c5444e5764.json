{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\React\\\\Spotify-clone\\\\frontend\\\\src\\\\components\\\\DefaultLayout\\\\MainView\\\\index.js\",\n  _s = $RefreshSig$();\nimport classNames from 'classnames/bind';\nimport style from './MainView.module.scss';\nimport { useEffect, useState } from 'react';\nimport { getAllArtist } from '../../../redux/apiRequest';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { PlayMusicIcon } from '../../../assets/Icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cx = classNames.bind(style);\nfunction MainView() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const artists = useSelector(state => {\n    var _state$artists$artist;\n    return (_state$artists$artist = state.artists.artist) === null || _state$artists$artist === void 0 ? void 0 : _state$artists$artist.allArtist;\n  });\n  const [playHover, setPlayHover] = useState(null);\n  useEffect(() => {\n    getAllArtist(dispatch);\n  }, [dispatch]);\n  const handleClick = artistId => {\n    navigate(`/artists/${artistId}`);\n  };\n  const handlePlayMusic = () => {\n    console.log('asdfasdf');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx('wrapper'),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx('header-btn'),\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Podcasts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx('all-song'),\n      children: artists.map(artist => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cx('song-item'),\n        onClick: () => handleClick(artist._id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: cx('song-avatar'),\n          src: artist.imageUrl,\n          alt: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), playHover && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: cx('play-icon'),\n          onClick: e => {\n            e.stopPropagation(artist._id);\n            handlePlayMusic(artist._id);\n          },\n          onMouseEnter: () => setPlayHover(true),\n          onMouseLeave: () => setPlayHover(false),\n          children: /*#__PURE__*/_jsxDEV(PlayMusicIcon, {\n            className: cx('icon')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this)]\n      }, artist._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(MainView, \"M/g1kkbvXbS84UcVlveXyRpzmKw=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = MainView;\nexport default MainView;\nvar _c;\n$RefreshReg$(_c, \"MainView\");","map":{"version":3,"names":["classNames","style","useEffect","useState","getAllArtist","useDispatch","useSelector","useNavigate","PlayMusicIcon","jsxDEV","_jsxDEV","cx","bind","MainView","_s","dispatch","navigate","artists","state","_state$artists$artist","artist","allArtist","playHover","setPlayHover","handleClick","artistId","handlePlayMusic","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_id","src","imageUrl","alt","name","e","stopPropagation","onMouseEnter","onMouseLeave","_c","$RefreshReg$"],"sources":["D:/study/React/Spotify-clone/frontend/src/components/DefaultLayout/MainView/index.js"],"sourcesContent":["import classNames from 'classnames/bind';\r\nimport style from './MainView.module.scss';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { getAllArtist } from '../../../redux/apiRequest';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { PlayMusicIcon } from '../../../assets/Icon';\r\n\r\nconst cx = classNames.bind(style);\r\n\r\nfunction MainView() {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const artists = useSelector((state) => state.artists.artist?.allArtist);\r\n    const [playHover, setPlayHover] = useState(null);\r\n\r\n    useEffect(() => {\r\n        getAllArtist(dispatch);\r\n    }, [dispatch]);\r\n\r\n    const handleClick = (artistId) => {\r\n        navigate(`/artists/${artistId}`);\r\n    };\r\n    const handlePlayMusic = () => {\r\n        console.log('asdfasdf');\r\n    };\r\n    return (\r\n        <div className={cx('wrapper')}>\r\n            <div className={cx('header-btn')}>\r\n                <button>All</button>\r\n                <button>Music</button>\r\n                <button>Podcasts</button>\r\n            </div>\r\n            <div className={cx('all-song')}>\r\n                {artists.map((artist) => (\r\n                    <div key={artist._id} className={cx('song-item')} onClick={() => handleClick(artist._id)}>\r\n                        <img className={cx('song-avatar')} src={artist.imageUrl} alt={artist.name}></img>\r\n                        <span>{artist.name}</span>\r\n\r\n                        {playHover && (\r\n                            <button\r\n                                className={cx('play-icon')}\r\n                                onClick={(e) => {\r\n                                    e.stopPropagation(artist._id);\r\n                                    handlePlayMusic(artist._id);\r\n                                }}\r\n                                onMouseEnter={() => setPlayHover(true)}\r\n                                onMouseLeave={() => setPlayHover(false)}\r\n                            >\r\n                                <PlayMusicIcon className={cx('icon')} />\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* TEST DELETE */}\r\n            {/* <span\r\n                style={{ width: '3rem', height: '3rem', fontSize: '2rem', marginTop: '3rem', color: 'var(--primary)' }}\r\n            >\r\n                Username:\r\n            </span>\r\n            {userData.map((u, index) => (\r\n                <div\r\n                    key={index + 1}\r\n                    style={{\r\n                        display: 'flex',\r\n                        width: '100%',\r\n                        height: '3rem',\r\n                        gap: '2rem',\r\n                    }}\r\n                >\r\n                    <span\r\n                        key={u._id}\r\n                        style={{\r\n                            // width: '50%',\r\n                            height: '3rem',\r\n                            fontSize: '1.8rem',\r\n                            color: 'white',\r\n                        }}\r\n                    >\r\n                        username: {u.userName}\r\n                    </span>\r\n                    {(user?.admin || u._id === user?._id) && (\r\n                        <button\r\n                            onClick={() => handleDelete(u._id)}\r\n                            style={{ width: '30%', height: '3rem', color: 'black' }}\r\n                        >\r\n                            DELETE\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            ))} */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}