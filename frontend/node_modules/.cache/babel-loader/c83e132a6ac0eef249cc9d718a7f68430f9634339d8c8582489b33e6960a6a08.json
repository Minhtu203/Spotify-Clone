{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    login: {\n      currentUser: null,\n      isFetching: false,\n      error: false\n    },\n    register: {\n      isFetching: false,\n      err: false\n    }\n  },\n  reducers: {\n    loginStart: state => {\n      state.login.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      state.login.isFetching = false;\n      state.login.currentUser = action.payload;\n      state.login.error = false;\n    },\n    loginFailed: state => {\n      state.login.isFetching = false;\n      state.login.error = true;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginFailed,\n  loginSuccess\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","authSlice","name","initialState","login","currentUser","isFetching","error","register","err","reducers","loginStart","state","loginSuccess","action","payload","loginFailed","actions","reducer"],"sources":["D:/study/React/Spotify-clone/frontend/src/redux/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: {\r\n        login: {\r\n            currentUser: null,\r\n            isFetching: false,\r\n            error: false,\r\n        },\r\n        register: {\r\n            isFetching: false,\r\n            err: false,\r\n        },\r\n    },\r\n    reducers: {\r\n        loginStart: (state) => {\r\n            state.login.isFetching = true;\r\n        },\r\n        loginSuccess: (state, action) => {\r\n            state.login.isFetching = false;\r\n            state.login.currentUser = action.payload;\r\n            state.login.error = false;\r\n        },\r\n        loginFailed: (state) => {\r\n            state.login.isFetching = false;\r\n            state.login.error = true;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { loginStart, loginFailed, loginSuccess } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,KAAK,EAAE;MACHC,WAAW,EAAE,IAAI;MACjBC,UAAU,EAAE,KAAK;MACjBC,KAAK,EAAE;IACX,CAAC;IACDC,QAAQ,EAAE;MACNF,UAAU,EAAE,KAAK;MACjBG,GAAG,EAAE;IACT;EACJ,CAAC;EACDC,QAAQ,EAAE;IACNC,UAAU,EAAGC,KAAK,IAAK;MACnBA,KAAK,CAACR,KAAK,CAACE,UAAU,GAAG,IAAI;IACjC,CAAC;IACDO,YAAY,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC7BF,KAAK,CAACR,KAAK,CAACE,UAAU,GAAG,KAAK;MAC9BM,KAAK,CAACR,KAAK,CAACC,WAAW,GAAGS,MAAM,CAACC,OAAO;MACxCH,KAAK,CAACR,KAAK,CAACG,KAAK,GAAG,KAAK;IAC7B,CAAC;IACDS,WAAW,EAAGJ,KAAK,IAAK;MACpBA,KAAK,CAACR,KAAK,CAACE,UAAU,GAAG,KAAK;MAC9BM,KAAK,CAACR,KAAK,CAACG,KAAK,GAAG,IAAI;IAC5B;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,UAAU;EAAEK,WAAW;EAAEH;AAAa,CAAC,GAAGZ,SAAS,CAACgB,OAAO;AAC1E,eAAehB,SAAS,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}