{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport authReducer from './authSlice';\nimport songReducer from './songSlice';\nimport artistReducer from './artistSlice';\nimport userReducer from './userSlice';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // dùng localStorage\n\nconst persistConfig = {\n  key: 'root',\n  // key lưu trong localStorage\n  storage,\n  // loại storage\n  whitelist: ['auth'] // chỉ persist state 'auth'\n};\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  users: userReducer,\n  songs: songReducer,\n  artists: artistReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  }) // để tránh warning non-serializable\n});\nexport default configureStore({\n  reducer: {\n    auth: authReducer,\n    users: userReducer,\n    songs: songReducer,\n    artists: artistReducer\n  }\n});\nexport const persistor = persistStore(store);","map":{"version":3,"names":["combineReducers","configureStore","authReducer","songReducer","artistReducer","userReducer","persistStore","persistReducer","storage","persistConfig","key","whitelist","rootReducer","auth","users","songs","artists","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","persistor"],"sources":["D:/study/React/Spotify-clone/frontend/src/redux/store.js"],"sourcesContent":["import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport authReducer from './authSlice';\r\nimport songReducer from './songSlice';\r\nimport artistReducer from './artistSlice';\r\nimport userReducer from './userSlice';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'; // dùng localStorage\r\n\r\nconst persistConfig = {\r\n    key: 'root', // key lưu trong localStorage\r\n    storage, // loại storage\r\n    whitelist: ['auth'], // chỉ persist state 'auth'\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    users: userReducer,\r\n    songs: songReducer,\r\n    artists: artistReducer,\r\n});\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware({ serializableCheck: false }), // để tránh warning non-serializable\r\n});\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        auth: authReducer,\r\n        users: userReducer,\r\n        songs: songReducer,\r\n        artists: artistReducer,\r\n    },\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAOC,aAAa,MAAM,eAAe;AACzC,OAAOC,WAAW,MAAM,aAAa;AACrC,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B,CAAC,CAAC;;AAEjD,MAAMC,aAAa,GAAG;EAClBC,GAAG,EAAE,MAAM;EAAE;EACbF,OAAO;EAAE;EACTG,SAAS,EAAE,CAAC,MAAM,CAAC,CAAE;AACzB,CAAC;AAED,MAAMC,WAAW,GAAGZ,eAAe,CAAC;EAChCa,IAAI,EAAEX,WAAW;EACjBY,KAAK,EAAET,WAAW;EAClBU,KAAK,EAAEZ,WAAW;EAClBa,OAAO,EAAEZ;AACb,CAAC,CAAC;AACF,MAAMa,gBAAgB,GAAGV,cAAc,CAACE,aAAa,EAAEG,WAAW,CAAC;AAEnE,OAAO,MAAMM,KAAK,GAAGjB,cAAc,CAAC;EAChCkB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,CAAC;IAAEC,iBAAiB,EAAE;EAAM,CAAC,CAAC,CAAE;AAC9F,CAAC,CAAC;AAEF,eAAerB,cAAc,CAAC;EAC1BkB,OAAO,EAAE;IACLN,IAAI,EAAEX,WAAW;IACjBY,KAAK,EAAET,WAAW;IAClBU,KAAK,EAAEZ,WAAW;IAClBa,OAAO,EAAEZ;EACb;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMmB,SAAS,GAAGjB,YAAY,CAACY,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}