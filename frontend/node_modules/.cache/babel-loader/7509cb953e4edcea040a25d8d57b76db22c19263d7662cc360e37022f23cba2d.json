{"ast":null,"code":"import axios from 'axios';\nimport { loginFailed, loginStart, loginSuccess, registerSuccess } from './authSlice';\nimport { registerStart } from '../redux/authSlice';\nimport { getSongFailed, getSongStart, getSongSuccess } from './songSlice';\nimport { getArtistFailed, getArtistStart, getArtistSuccess } from './artistSlice';\nexport const loginUser = async (user, dispatch, navigate) => {\n  dispatch(loginStart());\n  try {\n    const res = await axios.post('http://localhost:5000/api/auth/login', user);\n    dispatch(loginSuccess(res.data));\n    navigate('/');\n  } catch (error) {\n    dispatch(loginFailed());\n  }\n};\nexport const registerUser = async (user, dispatch, navigate) => {\n  dispatch(registerStart());\n  try {\n    const res = await axios.post('http://localhost:5000/api/auth/register', user);\n    dispatch(registerSuccess());\n    navigate('/login');\n  } catch (error) {\n    dispatch(loginFailed());\n  }\n};\nexport const getAllSongs = async (dispatch, navigate) => {\n  dispatch(getSongStart());\n  try {\n    const res = await axios.get('http://localhost:5000/api/songs/');\n    dispatch(getSongSuccess(res.data));\n    navigate('/');\n  } catch (error) {\n    dispatch(getSongFailed());\n  }\n};\nexport const getAllArtist = async (dispatch, navigate) => {\n  dispatch(getArtistStart());\n  try {\n    const res = await axios.get('http://localhost:5000/api/artists/');\n    dispatch(getArtistSuccess(res.data));\n    navigate('/');\n  } catch (error) {\n    dispatch(getArtistFailed());\n  }\n};","map":{"version":3,"names":["axios","loginFailed","loginStart","loginSuccess","registerSuccess","registerStart","getSongFailed","getSongStart","getSongSuccess","getArtistFailed","getArtistStart","getArtistSuccess","loginUser","user","dispatch","navigate","res","post","data","error","registerUser","getAllSongs","get","getAllArtist"],"sources":["D:/study/React/Spotify-clone/frontend/src/redux/apiRequest.js"],"sourcesContent":["import axios from 'axios';\r\nimport { loginFailed, loginStart, loginSuccess, registerSuccess } from './authSlice';\r\nimport { registerStart } from '../redux/authSlice';\r\nimport { getSongFailed, getSongStart, getSongSuccess } from './songSlice';\r\nimport { getArtistFailed, getArtistStart, getArtistSuccess } from './artistSlice';\r\n\r\nexport const loginUser = async (user, dispatch, navigate) => {\r\n    dispatch(loginStart());\r\n    try {\r\n        const res = await axios.post('http://localhost:5000/api/auth/login', user);\r\n        dispatch(loginSuccess(res.data));\r\n        navigate('/');\r\n    } catch (error) {\r\n        dispatch(loginFailed());\r\n    }\r\n};\r\n\r\nexport const registerUser = async (user, dispatch, navigate) => {\r\n    dispatch(registerStart());\r\n    try {\r\n        const res = await axios.post('http://localhost:5000/api/auth/register', user);\r\n        dispatch(registerSuccess());\r\n        navigate('/login');\r\n    } catch (error) {\r\n        dispatch(loginFailed());\r\n    }\r\n};\r\n\r\nexport const getAllSongs = async (dispatch, navigate) => {\r\n    dispatch(getSongStart());\r\n    try {\r\n        const res = await axios.get('http://localhost:5000/api/songs/');\r\n        dispatch(getSongSuccess(res.data));\r\n        navigate('/');\r\n    } catch (error) {\r\n        dispatch(getSongFailed());\r\n    }\r\n};\r\n\r\nexport const getAllArtist = async (dispatch, navigate) => {\r\n    dispatch(getArtistStart());\r\n    try {\r\n        const res = await axios.get('http://localhost:5000/api/artists/');\r\n        dispatch(getArtistSuccess(res.data));\r\n        navigate('/');\r\n    } catch (error) {\r\n        dispatch(getArtistFailed());\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,UAAU,EAAEC,YAAY,EAAEC,eAAe,QAAQ,aAAa;AACpF,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,aAAa,EAAEC,YAAY,EAAEC,cAAc,QAAQ,aAAa;AACzE,SAASC,eAAe,EAAEC,cAAc,EAAEC,gBAAgB,QAAQ,eAAe;AAEjF,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,IAAI,EAAEC,QAAQ,EAAEC,QAAQ,KAAK;EACzDD,QAAQ,CAACZ,UAAU,CAAC,CAAC,CAAC;EACtB,IAAI;IACA,MAAMc,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,sCAAsC,EAAEJ,IAAI,CAAC;IAC1EC,QAAQ,CAACX,YAAY,CAACa,GAAG,CAACE,IAAI,CAAC,CAAC;IAChCH,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZL,QAAQ,CAACb,WAAW,CAAC,CAAC,CAAC;EAC3B;AACJ,CAAC;AAED,OAAO,MAAMmB,YAAY,GAAG,MAAAA,CAAOP,IAAI,EAAEC,QAAQ,EAAEC,QAAQ,KAAK;EAC5DD,QAAQ,CAACT,aAAa,CAAC,CAAC,CAAC;EACzB,IAAI;IACA,MAAMW,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,yCAAyC,EAAEJ,IAAI,CAAC;IAC7EC,QAAQ,CAACV,eAAe,CAAC,CAAC,CAAC;IAC3BW,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZL,QAAQ,CAACb,WAAW,CAAC,CAAC,CAAC;EAC3B;AACJ,CAAC;AAED,OAAO,MAAMoB,WAAW,GAAG,MAAAA,CAAOP,QAAQ,EAAEC,QAAQ,KAAK;EACrDD,QAAQ,CAACP,YAAY,CAAC,CAAC,CAAC;EACxB,IAAI;IACA,MAAMS,GAAG,GAAG,MAAMhB,KAAK,CAACsB,GAAG,CAAC,kCAAkC,CAAC;IAC/DR,QAAQ,CAACN,cAAc,CAACQ,GAAG,CAACE,IAAI,CAAC,CAAC;IAClCH,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZL,QAAQ,CAACR,aAAa,CAAC,CAAC,CAAC;EAC7B;AACJ,CAAC;AAED,OAAO,MAAMiB,YAAY,GAAG,MAAAA,CAAOT,QAAQ,EAAEC,QAAQ,KAAK;EACtDD,QAAQ,CAACJ,cAAc,CAAC,CAAC,CAAC;EAC1B,IAAI;IACA,MAAMM,GAAG,GAAG,MAAMhB,KAAK,CAACsB,GAAG,CAAC,oCAAoC,CAAC;IACjER,QAAQ,CAACH,gBAAgB,CAACK,GAAG,CAACE,IAAI,CAAC,CAAC;IACpCH,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZL,QAAQ,CAACL,eAAe,CAAC,CAAC,CAAC;EAC/B;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}