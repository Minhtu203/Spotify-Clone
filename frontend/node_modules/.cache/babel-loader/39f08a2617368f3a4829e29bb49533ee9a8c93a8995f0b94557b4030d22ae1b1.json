{"ast":null,"code":"import axios from 'axios';\nimport { loginFailed, loginStart, loginSuccess } from './authSlice';\nimport { registerStart } from '../redux/authSlice';\nexport const loginUser = async (user, dispatch, navigate) => {\n  dispatch(loginStart());\n  try {\n    const res = await axios.post('http://localhost:5000/api/auth/login', user);\n    dispatch(loginSuccess(res.data));\n    navigate('/');\n  } catch (error) {\n    dispatch(loginFailed());\n  }\n};\nexport const registerUser = async (dispatch, navigate) => {\n  dispatch(registerStart());\n};","map":{"version":3,"names":["axios","loginFailed","loginStart","loginSuccess","registerStart","loginUser","user","dispatch","navigate","res","post","data","error","registerUser"],"sources":["D:/study/React/Spotify-clone/frontend/src/redux/apiRequest.js"],"sourcesContent":["import axios from 'axios';\r\nimport { loginFailed, loginStart, loginSuccess } from './authSlice';\r\nimport { registerStart } from '../redux/authSlice';\r\n\r\nexport const loginUser = async (user, dispatch, navigate) => {\r\n    dispatch(loginStart());\r\n    try {\r\n        const res = await axios.post('http://localhost:5000/api/auth/login', user);\r\n        dispatch(loginSuccess(res.data));\r\n        navigate('/');\r\n    } catch (error) {\r\n        dispatch(loginFailed());\r\n    }\r\n};\r\n\r\nexport const registerUser = async (dispatch, navigate) => {\r\n    dispatch(registerStart());\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,UAAU,EAAEC,YAAY,QAAQ,aAAa;AACnE,SAASC,aAAa,QAAQ,oBAAoB;AAElD,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,IAAI,EAAEC,QAAQ,EAAEC,QAAQ,KAAK;EACzDD,QAAQ,CAACL,UAAU,CAAC,CAAC,CAAC;EACtB,IAAI;IACA,MAAMO,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,sCAAsC,EAAEJ,IAAI,CAAC;IAC1EC,QAAQ,CAACJ,YAAY,CAACM,GAAG,CAACE,IAAI,CAAC,CAAC;IAChCH,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZL,QAAQ,CAACN,WAAW,CAAC,CAAC,CAAC;EAC3B;AACJ,CAAC;AAED,OAAO,MAAMY,YAAY,GAAG,MAAAA,CAAON,QAAQ,EAAEC,QAAQ,KAAK;EACtDD,QAAQ,CAACH,aAAa,CAAC,CAAC,CAAC;AAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}