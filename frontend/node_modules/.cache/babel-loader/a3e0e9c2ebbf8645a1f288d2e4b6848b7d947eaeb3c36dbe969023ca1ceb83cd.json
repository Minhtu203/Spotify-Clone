{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport authReducer from './authSlice';\nimport songReducer from './songSlice';\nimport artistReducer from './artistSlice';\nimport userReducer from './userSlice';\nimport { createRoot } from 'react-dom/client';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { PersistGate } from 'redux-persist/integration/react';\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage\n};\nconst rootReducer = {\n  auth: authReducer,\n  users: userReducer,\n  songs: songReducer,\n  artists: artistReducer\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\n\n// export default configureStore({\n//     reducer: {\n//         auth: authReducer,\n//         users: userReducer,\n//         songs: songReducer,\n//         artists: artistReducer,\n//     },\n// });","map":{"version":3,"names":["configureStore","authReducer","songReducer","artistReducer","userReducer","createRoot","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","PersistGate","persistConfig","key","version","rootReducer","auth","users","songs","artists","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions"],"sources":["D:/study/React/Spotify-clone/frontend/src/redux/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport authReducer from './authSlice';\r\nimport songReducer from './songSlice';\r\nimport artistReducer from './artistSlice';\r\nimport userReducer from './userSlice';\r\n\r\nimport { createRoot } from 'react-dom/client';\r\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    version: 1,\r\n    storage,\r\n};\r\nconst rootReducer = {\r\n    auth: authReducer,\r\n    users: userReducer,\r\n    songs: songReducer,\r\n    artists: artistReducer,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware({\r\n            serializableCheck: {\r\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n            },\r\n        }),\r\n});\r\n\r\n// export default configureStore({\r\n//     reducer: {\r\n//         auth: authReducer,\r\n//         users: userReducer,\r\n//         songs: songReducer,\r\n//         artists: artistReducer,\r\n//     },\r\n// });\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAOC,aAAa,MAAM,eAAe;AACzC,OAAOC,WAAW,MAAM,aAAa;AAErC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,YAAY,EAAEC,cAAc,EAAEC,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AAC/G,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,WAAW,QAAQ,iCAAiC;AAE7D,MAAMC,aAAa,GAAG;EAClBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAE,CAAC;EACVJ;AACJ,CAAC;AACD,MAAMK,WAAW,GAAG;EAChBC,IAAI,EAAEnB,WAAW;EACjBoB,KAAK,EAAEjB,WAAW;EAClBkB,KAAK,EAAEpB,WAAW;EAClBqB,OAAO,EAAEpB;AACb,CAAC;AAED,MAAMqB,gBAAgB,GAAGjB,cAAc,CAACS,aAAa,EAAEG,WAAW,CAAC;AAEnE,MAAMM,KAAK,GAAGzB,cAAc,CAAC;EACzB0B,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC7BA,oBAAoB,CAAC;IACjBC,iBAAiB,EAAE;MACfC,cAAc,EAAE,CAACtB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACtE;EACJ,CAAC;AACT,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}