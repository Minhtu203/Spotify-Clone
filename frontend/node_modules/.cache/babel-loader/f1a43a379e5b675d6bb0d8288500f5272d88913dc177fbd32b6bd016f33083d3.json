{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\React\\\\Spotify-clone\\\\frontend\\\\src\\\\components\\\\DefaultLayout\\\\MainView\\\\index.js\",\n  _s = $RefreshSig$();\nimport classNames from 'classnames/bind';\nimport style from './MainView.module.scss';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cx = classNames.bind(style);\nfunction Songs() {\n  _s();\n  const [song, setSong] = useState([]);\n  const handleGetSongs = async e => {\n    e.preventDefault();\n    const songs = {\n      name: song.name,\n      audioUrl: song.audioUrl,\n      avatar: song.avatar\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx('wrapper'),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx('header-btn'),\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Podcasts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(Songs, \"XsOAewjlEqkH+X8dVF7VSAd13rU=\");\n_c = Songs;\nexport default Songs;\nvar _c;\n$RefreshReg$(_c, \"Songs\");","map":{"version":3,"names":["classNames","style","useState","jsxDEV","_jsxDEV","cx","bind","Songs","_s","song","setSong","handleGetSongs","e","preventDefault","songs","name","audioUrl","avatar","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/study/React/Spotify-clone/frontend/src/components/DefaultLayout/MainView/index.js"],"sourcesContent":["import classNames from 'classnames/bind';\r\nimport style from './MainView.module.scss';\r\nimport { useState } from 'react';\r\n\r\nconst cx = classNames.bind(style);\r\n\r\nfunction Songs() {\r\n    const [song, setSong] = useState([]);\r\n\r\n    const handleGetSongs = async (e) => {\r\n        e.preventDefault();\r\n        const songs = {\r\n            name: song.name,\r\n            audioUrl: song.audioUrl,\r\n            avatar: song.avatar,\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className={cx('wrapper')}>\r\n            <div className={cx('header-btn')}>\r\n                <button>All</button>\r\n                <button>Music</button>\r\n                <button>Podcasts</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Songs;\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,iBAAiB;AACxC,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,EAAE,GAAGL,UAAU,CAACM,IAAI,CAACL,KAAK,CAAC;AAEjC,SAASM,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,cAAc,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,KAAK,GAAG;MACVC,IAAI,EAAEN,IAAI,CAACM,IAAI;MACfC,QAAQ,EAAEP,IAAI,CAACO,QAAQ;MACvBC,MAAM,EAAER,IAAI,CAACQ;IACjB,CAAC;EACL,CAAC;EAED,oBACIb,OAAA;IAAKc,SAAS,EAAEb,EAAE,CAAC,SAAS,CAAE;IAAAc,QAAA,eAC1Bf,OAAA;MAAKc,SAAS,EAAEb,EAAE,CAAC,YAAY,CAAE;MAAAc,QAAA,gBAC7Bf,OAAA;QAAAe,QAAA,EAAQ;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpBnB,OAAA;QAAAe,QAAA,EAAQ;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtBnB,OAAA;QAAAe,QAAA,EAAQ;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACf,EAAA,CArBQD,KAAK;AAAAiB,EAAA,GAALjB,KAAK;AAuBd,eAAeA,KAAK;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}