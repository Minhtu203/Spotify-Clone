{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\React\\\\Spotify-clone\\\\frontend\\\\src\\\\components\\\\DefaultLayout\\\\MainView\\\\index.js\",\n  _s = $RefreshSig$();\nimport classNames from 'classnames/bind';\nimport style from './MainView.module.scss';\nimport { useEffect } from 'react';\nimport { getAllArtist } from '../../../redux/apiRequest';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cx = classNames.bind(style);\nfunction Songs() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const artists = useSelector(state => {\n    var _state$artists$artist;\n    return (_state$artists$artist = state.artists.artist) === null || _state$artists$artist === void 0 ? void 0 : _state$artists$artist.allArtist;\n  });\n  useEffect(() => {\n    getAllArtist(dispatch);\n  }, [dispatch]);\n  const handleClick = artistId => {\n    navigate(`/artist/${artistId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx('wrapper'),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx('header-btn'),\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Podcasts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx('all-song'),\n      onClick: handleClick,\n      children: artists.map(artist => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cx('song-item'),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: cx('song-avatar'),\n          src: artist.imageUrl,\n          alt: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)]\n      }, artist._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(Songs, \"tToxsK5P1ztshfmvSGaLV5eLrmA=\", true, function () {\n  return [useDispatch, useSelector];\n});\n_c = Songs;\nexport default Songs;\nvar _c;\n$RefreshReg$(_c, \"Songs\");","map":{"version":3,"names":["classNames","style","useEffect","getAllArtist","useDispatch","useSelector","jsxDEV","_jsxDEV","cx","bind","Songs","_s","dispatch","navigate","useNavigate","artists","state","_state$artists$artist","artist","allArtist","handleClick","artistId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","src","imageUrl","alt","name","_id","_c","$RefreshReg$"],"sources":["D:/study/React/Spotify-clone/frontend/src/components/DefaultLayout/MainView/index.js"],"sourcesContent":["import classNames from 'classnames/bind';\r\nimport style from './MainView.module.scss';\r\n\r\nimport { useEffect } from 'react';\r\nimport { getAllArtist } from '../../../redux/apiRequest';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst cx = classNames.bind(style);\r\n\r\nfunction Songs() {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const artists = useSelector((state) => state.artists.artist?.allArtist);\r\n\r\n    useEffect(() => {\r\n        getAllArtist(dispatch);\r\n    }, [dispatch]);\r\n\r\n    const handleClick = (artistId) => {\r\n        navigate(`/artist/${artistId}`);\r\n    };\r\n\r\n    return (\r\n        <div className={cx('wrapper')}>\r\n            <div className={cx('header-btn')}>\r\n                <button>All</button>\r\n                <button>Music</button>\r\n                <button>Podcasts</button>\r\n            </div>\r\n            <div className={cx('all-song')} onClick={handleClick}>\r\n                {artists.map((artist) => (\r\n                    <div key={artist._id} className={cx('song-item')}>\r\n                        <img className={cx('song-avatar')} src={artist.imageUrl} alt={artist.name}></img>\r\n                        <span>{artist.name}</span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Songs;\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,iBAAiB;AACxC,OAAOC,KAAK,MAAM,wBAAwB;AAE1C,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,YAAY,QAAQ,2BAA2B;AACxD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,EAAE,GAAGR,UAAU,CAACS,IAAI,CAACR,KAAK,CAAC;AAEjC,SAASS,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGC,WAAW,CAAC,CAAC;EAC9B,MAAMC,OAAO,GAAGV,WAAW,CAAEW,KAAK;IAAA,IAAAC,qBAAA;IAAA,QAAAA,qBAAA,GAAKD,KAAK,CAACD,OAAO,CAACG,MAAM,cAAAD,qBAAA,uBAApBA,qBAAA,CAAsBE,SAAS;EAAA,EAAC;EAEvEjB,SAAS,CAAC,MAAM;IACZC,YAAY,CAACS,QAAQ,CAAC;EAC1B,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMQ,WAAW,GAAIC,QAAQ,IAAK;IAC9BR,QAAQ,CAAC,WAAWQ,QAAQ,EAAE,CAAC;EACnC,CAAC;EAED,oBACId,OAAA;IAAKe,SAAS,EAAEd,EAAE,CAAC,SAAS,CAAE;IAAAe,QAAA,gBAC1BhB,OAAA;MAAKe,SAAS,EAAEd,EAAE,CAAC,YAAY,CAAE;MAAAe,QAAA,gBAC7BhB,OAAA;QAAAgB,QAAA,EAAQ;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpBpB,OAAA;QAAAgB,QAAA,EAAQ;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtBpB,OAAA;QAAAgB,QAAA,EAAQ;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACNpB,OAAA;MAAKe,SAAS,EAAEd,EAAE,CAAC,UAAU,CAAE;MAACoB,OAAO,EAAER,WAAY;MAAAG,QAAA,EAChDR,OAAO,CAACc,GAAG,CAAEX,MAAM,iBAChBX,OAAA;QAAsBe,SAAS,EAAEd,EAAE,CAAC,WAAW,CAAE;QAAAe,QAAA,gBAC7ChB,OAAA;UAAKe,SAAS,EAAEd,EAAE,CAAC,aAAa,CAAE;UAACsB,GAAG,EAAEZ,MAAM,CAACa,QAAS;UAACC,GAAG,EAAEd,MAAM,CAACe;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACjFpB,OAAA;UAAAgB,QAAA,EAAOL,MAAM,CAACe;QAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAFpBT,MAAM,CAACgB,GAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGf,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAChB,EAAA,CA9BQD,KAAK;EAAA,QACON,WAAW,EAEZC,WAAW;AAAA;AAAA8B,EAAA,GAHtBzB,KAAK;AAgCd,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}